{"ast":null,"code":"var _jsxFileName = \"/Users/vineettallavajhala/workspace/Servicechain.io/packages/react-app/src/views/ExampleUI.jsx\";\nimport React from \"react\";\nimport { Button, List } from \"antd\";\nimport { Address, AddressInput } from \"../components\";\nimport { parseEther, formatEther } from \"@ethersproject/units\";\nexport default function ExampleUI({\n  mainnetProvider,\n  setPurposeEvents,\n  purpose,\n  yourLocalBalance,\n  tx,\n  writeContracts\n}) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      border: \"1px solid #cccccc\",\n      padding: 16,\n      width: 400,\n      margin: \"auto\",\n      marginTop: 64\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, \"example ui:\"), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, purpose), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, \"Your Balance: \", yourLocalBalance ? formatEther(yourLocalBalance) : \"...\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      margin: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => {\n      /* look how you call setPurpose on your contract: */\n      tx(writeContracts.MultiSigWallet.submitTip(\"üêñ Don't hog the block!\"));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }\n  }, \"Set Purpose\")), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      margin: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => {\n      /*\n        you can also just craft a transaction and send it to the tx() transactor\n        here we are sending value straight to the contract's address:\n      */\n      tx({\n        to: writeContracts.YourContract.address,\n        value: parseEther(\"0.001\")\n      });\n      /* this should throw an error about \"no fallback nor receive function\" until you add it */\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, \"Send Value\")), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      margin: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => {\n      /* look how we call setPurpose AND send some value along */\n      tx(writeContracts.YourContract.setPurpose(\"üíµ Paying for this one!\", {\n        value: parseEther(\"0.001\")\n      }));\n      /* this will fail until you make the setPurpose function payable */\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, \"Set Purpose With Value\")), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      margin: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => {\n      /* you can also just craft a transaction and send it to the tx() transactor */\n      tx({\n        to: writeContracts.YourContract.address,\n        value: parseEther(\"0.001\"),\n        data: writeContracts.YourContract.interface.encodeFunctionData(\"setPurpose(string)\", [\"ü§ì Whoa so 1337!\"])\n      });\n      /* this should throw an error about \"no fallback nor receive function\" until you add it */\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, \"Another Example\"))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: 600,\n      margin: \"auto\",\n      marginTop: 32\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    bordered: true,\n    dataSource: setPurposeEvents,\n    renderItem: item => /*#__PURE__*/React.createElement(List.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Address, {\n      value: item[0],\n      ensProvider: mainnetProvider,\n      fontSize: 16,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 15\n      }\n    }), \" =>\", item[1]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/vineettallavajhala/workspace/Servicechain.io/packages/react-app/src/views/ExampleUI.jsx"],"names":["React","Button","List","Address","AddressInput","parseEther","formatEther","ExampleUI","mainnetProvider","setPurposeEvents","purpose","yourLocalBalance","tx","writeContracts","border","padding","width","margin","marginTop","MultiSigWallet","submitTip","to","YourContract","address","value","setPurpose","data","interface","encodeFunctionData","item"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Button, List } from \"antd\";\nimport { Address, AddressInput } from \"../components\";\nimport { parseEther, formatEther } from \"@ethersproject/units\";\n\nexport default function ExampleUI({mainnetProvider, setPurposeEvents, purpose, yourLocalBalance, tx, writeContracts }) {\n\n  return (\n    <div>\n\n      {/*\n        ‚öôÔ∏è Here is an example UI that displays and sets the purpose in your smart contract:\n      */}\n      <div style={{border:\"1px solid #cccccc\", padding:16, width:400, margin:\"auto\",marginTop:64}}>\n        <h3>example ui:</h3>\n        <h2>{purpose}</h2>\n\n        {  /* use formatEther to display a BigNumber: */ }\n        <h2>Your Balance: {yourLocalBalance?formatEther(yourLocalBalance):\"...\"}</h2>\n\n\n        <div style={{margin:8}}>\n          <Button onClick={()=>{\n            /* look how you call setPurpose on your contract: */\n            tx( writeContracts.MultiSigWallet.submitTip(\"üêñ Don't hog the block!\") )\n          }}>Set Purpose</Button>\n        </div>\n\n        <div style={{margin:8}}>\n          <Button onClick={()=>{\n            /*\n              you can also just craft a transaction and send it to the tx() transactor\n              here we are sending value straight to the contract's address:\n            */\n            tx({\n              to: writeContracts.YourContract.address,\n              value: parseEther(\"0.001\")\n            });\n            /* this should throw an error about \"no fallback nor receive function\" until you add it */\n          }}>Send Value</Button>\n        </div>\n\n        <div style={{margin:8}}>\n          <Button onClick={()=>{\n            /* look how we call setPurpose AND send some value along */\n            tx( writeContracts.YourContract.setPurpose(\"üíµ Paying for this one!\",{\n              value: parseEther(\"0.001\")\n            }))\n            /* this will fail until you make the setPurpose function payable */\n          }}>Set Purpose With Value</Button>\n        </div>\n\n\n        <div style={{margin:8}}>\n          <Button onClick={()=>{\n            /* you can also just craft a transaction and send it to the tx() transactor */\n            tx({\n              to: writeContracts.YourContract.address,\n              value: parseEther(\"0.001\"),\n              data: writeContracts.YourContract.interface.encodeFunctionData(\"setPurpose(string)\",[\"ü§ì Whoa so 1337!\"])\n            });\n            /* this should throw an error about \"no fallback nor receive function\" until you add it */\n          }}>Another Example</Button>\n        </div>\n\n      </div>\n\n      {/*\n        üìë Maybe display a list of events?\n          (uncomment the event and emit line in YourContract.sol! )\n      */}\n      <div style={{ width:600, margin: \"auto\", marginTop:32 }}>\n        <List\n          bordered\n          dataSource={setPurposeEvents}\n          renderItem={item => (\n            <List.Item>\n              <Address\n                  value={item[0]}\n                  ensProvider={mainnetProvider}\n                  fontSize={16}\n                /> =>\n              {item[1]}\n            </List.Item>\n          )}\n        />\n      </div>\n\n\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}