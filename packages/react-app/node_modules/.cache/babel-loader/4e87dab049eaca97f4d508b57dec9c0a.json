{"ast":null,"code":"var _jsxFileName = \"/Users/vineettallavajhala/workspace/Servicechain.io/packages/react-app/src/App.jsx\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { BrowserRouter, Switch, Route, Link } from \"react-router-dom\";\nimport \"antd/dist/antd.css\";\nimport { MailOutlined } from \"@ant-design/icons\";\nimport { getDefaultProvider, InfuraProvider, JsonRpcProvider, Web3Provider } from \"@ethersproject/providers\";\nimport \"./App.css\";\nimport { Row, Col, Button, List, Tabs, Menu } from \"antd\";\nimport Web3Modal from \"web3modal\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport { useUserAddress } from \"eth-hooks\";\nimport { useExchangePrice, useGasPrice, useUserProvider, useContractLoader, useContractReader, useBalance, useEventListener } from \"./hooks\";\nimport { Header, Account, Faucet, Ramp, Contract, GasGauge, Address } from \"./components\";\nimport { Transactor } from \"./helpers\";\nimport { parseEther, formatEther } from \"@ethersproject/units\"; //import Hints from \"./Hints\";\n\nimport { Hints, ExampleUI } from \"./views\";\n/*\n    Welcome to 🏗 scaffold-eth !\n\n    Code:\n    https://github.com/austintgriffith/scaffold-eth\n\n    Support:\n    https://t.me/joinchat/KByvmRe5wkR-8F_zz6AjpA\n    or DM @austingriffith on twitter or telegram\n\n    You should get your own Infura.io ID and put it in `constants.js`\n    (this is your connection to the main Ethereum network for ENS etc.)\n*/\n\nimport { INFURA_ID, ETHERSCAN_KEY } from \"./constants\";\nconst {\n  TabPane\n} = Tabs; // 🔭 block explorer URL\n\nconst blockExplorer = \"https://etherscan.io/\"; // for xdai: \"https://blockscout.com/poa/xdai/\"\n// 🛰 providers\n\nconsole.log(\"📡 Connecting to Mainnet Ethereum\");\nconst mainnetProvider = getDefaultProvider(\"mainnet\", {\n  infura: INFURA_ID,\n  etherscan: ETHERSCAN_KEY,\n  quorum: 1\n}); // const mainnetProvider = new InfuraProvider(\"mainnet\",INFURA_ID);\n// const mainnetProvider = new JsonRpcProvider(\"https://mainnet.infura.io/v3/5ce0898319eb4f5c9d4c982c8f78392a\")\n// ( ⚠️ Getting \"failed to meet quorum\" errors? Check your INFURA_ID)\n// 🏠 Your local provider is usually pointed at your local blockchain\n\nconst localProviderUrl = \"http://localhost:8545\"; // for xdai: https://dai.poa.network\n// as you deploy to other networks you can set REACT_APP_PROVIDER=https://dai.poa.network in packages/react-app/.env\n\nconst localProviderUrlFromEnv = process.env.REACT_APP_PROVIDER ? process.env.REACT_APP_PROVIDER : localProviderUrl;\nconsole.log(\"🏠 Connecting to provider:\", localProviderUrlFromEnv);\nconst localProvider = new JsonRpcProvider(localProviderUrlFromEnv);\n\nfunction App() {\n  const [injectedProvider, setInjectedProvider] = useState();\n  /* 💵 this hook will get the price of ETH from 🦄 Uniswap: */\n\n  const price = useExchangePrice(mainnetProvider); //1 for xdai\n\n  /* 🔥 this hook will get the price of Gas from ⛽️ EtherGasStation */\n\n  const gasPrice = useGasPrice(\"fast\"); //1000000000 for xdai\n  // For more hooks, check out 🔗eth-hooks at: https://www.npmjs.com/package/eth-hooks\n  // Use your injected provider from 🦊 Metamask or if you don't have it then instantly generate a 🔥 burner wallet.\n\n  const userProvider = useUserProvider(injectedProvider, localProvider);\n  const address = useUserAddress(userProvider); // The transactor wraps transactions and provides notificiations\n\n  const tx = Transactor(userProvider, gasPrice); // 🏗 scaffold-eth is full of handy hooks like this one to get your balance:\n\n  const yourLocalBalance = useBalance(localProvider, address);\n  console.log(\"💵 yourLocalBalance\", yourLocalBalance ? formatEther(yourLocalBalance) : \"...\"); // just plug in different 🛰 providers to get your balance on different chains:\n\n  const yourMainnetBalance = useBalance(mainnetProvider, address);\n  console.log(\"💵 yourMainnetBalance\", yourMainnetBalance ? formatEther(yourMainnetBalance) : \"...\"); // Load in your local 📝 contract and read a value from it:\n\n  const readContracts = useContractLoader(localProvider);\n  console.log(\"📝 readContracts\", readContracts); // keep track of a variable from the contract in the local React state:\n\n  const purpose = useContractReader(readContracts, \"YourContract\", \"purpose\");\n  console.log(\"🤗 purpose:\", purpose); // If you want to make 🔐 write transactions to your contracts, use the userProvider:\n\n  const writeContracts = useContractLoader(userProvider);\n  console.log(\"🔐 writeContracts\", writeContracts); //📟 Listen for broadcast events\n\n  const setPurposeEvents = useEventListener(readContracts, \"YourContract\", \"SetPurpose\", localProvider, 1);\n  console.log(\"📟 SetPurpose events:\", setPurposeEvents);\n  const loadWeb3Modal = useCallback(async () => {\n    const provider = await web3Modal.connect();\n    setInjectedProvider(new Web3Provider(provider));\n  }, [setInjectedProvider]);\n  useEffect(() => {\n    if (web3Modal.cachedProvider) {\n      loadWeb3Modal();\n    }\n  }, [loadWeb3Modal]);\n  console.log(\"Location:\", window.location.pathname);\n  const [route, setRoute] = useState();\n  useEffect(() => {\n    console.log(\"SETTING ROUTE\", window.location.pathname);\n    setRoute(window.location.pathname);\n  }, [window.location.pathname]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(BrowserRouter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Menu, {\n    style: {\n      textAlign: \"center\"\n    },\n    selectedKeys: [route],\n    mode: \"horizontal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Menu.Item, {\n    key: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    onClick: () => {\n      setRoute(\"/\");\n    },\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }, \"ServiceChain\")), /*#__PURE__*/React.createElement(Menu.Item, {\n    key: \"/hints\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    onClick: () => {\n      setRoute(\"/hints\");\n    },\n    to: \"/hints\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }, \"Hints\")), /*#__PURE__*/React.createElement(Menu.Item, {\n    key: \"/exampleui\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    onClick: () => {\n      setRoute(\"/exampleui\");\n    },\n    to: \"/exampleui\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  }, \"ExampleUI\"))), /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Contract, {\n    name: \"Tipping\",\n    signer: userProvider.getSigner(),\n    provider: localProvider,\n    address: address,\n    blockExplorer: blockExplorer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Contract, {\n    name: \"Rating\",\n    signer: userProvider.getSigner(),\n    provider: localProvider,\n    address: address,\n    blockExplorer: blockExplorer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Contract, {\n    name: \"Log\",\n    signer: userProvider.getSigner(),\n    provider: localProvider,\n    address: address,\n    blockExplorer: blockExplorer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    path: \"/hints\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Hints, {\n    address: address,\n    yourLocalBalance: yourLocalBalance,\n    mainnetProvider: mainnetProvider,\n    price: price,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    path: \"/exampleui\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ExampleUI, {\n    mainnetProvider: mainnetProvider,\n    setPurposeEvents: setPurposeEvents,\n    purpose: purpose,\n    yourLocalBalance: yourLocalBalance,\n    tx: tx,\n    writeContracts: writeContracts,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      position: \"fixed\",\n      textAlign: \"right\",\n      right: 0,\n      top: 0,\n      padding: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Account, {\n    address: address,\n    localProvider: localProvider,\n    userProvider: userProvider,\n    mainnetProvider: mainnetProvider,\n    price: price,\n    web3Modal: web3Modal,\n    loadWeb3Modal: loadWeb3Modal,\n    logoutOfWeb3Modal: logoutOfWeb3Modal,\n    blockExplorer: blockExplorer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 10\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      position: \"fixed\",\n      textAlign: \"left\",\n      left: 0,\n      bottom: 20,\n      padding: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    align: \"middle\",\n    gutter: [4, 4],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(Ramp, {\n    price: price,\n    address: address,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 14\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    span: 8,\n    style: {\n      textAlign: \"center\",\n      opacity: 0.8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(GasGauge, {\n    gasPrice: gasPrice,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 14\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    span: 8,\n    style: {\n      textAlign: \"center\",\n      opacity: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => {\n      window.open(\"https://t.me/joinchat/KByvmRe5wkR-8F_zz6AjpA\");\n    },\n    size: \"large\",\n    shape: \"round\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      marginRight: 8\n    },\n    role: \"img\",\n    \"aria-label\": \"support\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 16\n    }\n  }, \"\\uD83D\\uDCAC\"), \"Support\"))), /*#__PURE__*/React.createElement(Row, {\n    align: \"middle\",\n    gutter: [4, 4],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 12\n    }\n  },\n  /*  if the local provider has a signer, let's show the faucet:  */\n  localProvider && localProvider.connection && localProvider.connection.url && localProvider.connection.url.indexOf(\"localhost\") >= 0 && !process.env.REACT_APP_PROVIDER && price > 1 ? /*#__PURE__*/React.createElement(Faucet, {\n    localProvider: localProvider,\n    price: price,\n    ensProvider: mainnetProvider,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 18\n    }\n  }) : \"\"))));\n}\n/*\n  Web3 modal helps us \"connect\" external wallets:\n*/\n\n\nconst web3Modal = new Web3Modal({\n  // network: \"mainnet\", // optional\n  cacheProvider: true,\n  // optional\n  providerOptions: {\n    walletconnect: {\n      package: WalletConnectProvider,\n      // required\n      options: {\n        infuraId: INFURA_ID\n      }\n    }\n  }\n});\n\nconst logoutOfWeb3Modal = async () => {\n  await web3Modal.clearCachedProvider();\n  setTimeout(() => {\n    window.location.reload();\n  }, 1);\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/vineettallavajhala/workspace/Servicechain.io/packages/react-app/src/App.jsx"],"names":["React","useCallback","useEffect","useState","BrowserRouter","Switch","Route","Link","MailOutlined","getDefaultProvider","InfuraProvider","JsonRpcProvider","Web3Provider","Row","Col","Button","List","Tabs","Menu","Web3Modal","WalletConnectProvider","useUserAddress","useExchangePrice","useGasPrice","useUserProvider","useContractLoader","useContractReader","useBalance","useEventListener","Header","Account","Faucet","Ramp","Contract","GasGauge","Address","Transactor","parseEther","formatEther","Hints","ExampleUI","INFURA_ID","ETHERSCAN_KEY","TabPane","blockExplorer","console","log","mainnetProvider","infura","etherscan","quorum","localProviderUrl","localProviderUrlFromEnv","process","env","REACT_APP_PROVIDER","localProvider","App","injectedProvider","setInjectedProvider","price","gasPrice","userProvider","address","tx","yourLocalBalance","yourMainnetBalance","readContracts","purpose","writeContracts","setPurposeEvents","loadWeb3Modal","provider","web3Modal","connect","cachedProvider","window","location","pathname","route","setRoute","textAlign","getSigner","position","right","top","padding","logoutOfWeb3Modal","left","bottom","opacity","open","marginRight","connection","url","indexOf","cacheProvider","providerOptions","walletconnect","package","options","infuraId","clearCachedProvider","setTimeout","reload"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,SAA7B,EAAwCC,QAAxC,QAAwD,OAAxD;AACA,SAASC,aAAT,EAAwBC,MAAxB,EAAgCC,KAAhC,EAAuCC,IAAvC,QAAmD,kBAAnD;AACA,OAAO,oBAAP;AACA,SAASC,YAAT,QAA6B,mBAA7B;AACA,SAASC,kBAAT,EAA6BC,cAA7B,EAA6CC,eAA7C,EAA8DC,YAA9D,QAAkF,0BAAlF;AACA,OAAO,WAAP;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,MAAnB,EAA2BC,IAA3B,EAAiCC,IAAjC,EAAuCC,IAAvC,QAAmD,MAAnD;AACA,OAAOC,SAAP,MAAsB,WAAtB;AACA,OAAOC,qBAAP,MAAkC,8BAAlC;AACA,SAASC,cAAT,QAA+B,WAA/B;AACA,SAASC,gBAAT,EAA2BC,WAA3B,EAAwCC,eAAxC,EAAyDC,iBAAzD,EAA4EC,iBAA5E,EAA+FC,UAA/F,EAA2GC,gBAA3G,QAAmI,SAAnI;AACA,SAASC,MAAT,EAAiBC,OAAjB,EAA0BC,MAA1B,EAAkCC,IAAlC,EAAwCC,QAAxC,EAAkDC,QAAlD,EAA4DC,OAA5D,QAA2E,cAA3E;AACA,SAASC,UAAT,QAA2B,WAA3B;AACA,SAASC,UAAT,EAAqBC,WAArB,QAAwC,sBAAxC,C,CACA;;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,SAAjC;AACA;;;;;;;;;;;;;;AAaA,SAASC,SAAT,EAAoBC,aAApB,QAAyC,aAAzC;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAc1B,IAApB,C,CAEA;;AACA,MAAM2B,aAAa,GAAG,uBAAtB,C,CAA8C;AAE9C;;AACAC,OAAO,CAACC,GAAR,CAAY,mCAAZ;AACA,MAAMC,eAAe,GAAGtC,kBAAkB,CAAC,SAAD,EAAY;AAAEuC,EAAAA,MAAM,EAAEP,SAAV;AAAqBQ,EAAAA,SAAS,EAAEP,aAAhC;AAA+CQ,EAAAA,MAAM,EAAE;AAAvD,CAAZ,CAA1C,C,CACA;AACA;AACA;AAEA;;AACA,MAAMC,gBAAgB,GAAG,uBAAzB,C,CAAkD;AAClD;;AACA,MAAMC,uBAAuB,GAAGC,OAAO,CAACC,GAAR,CAAYC,kBAAZ,GAAiCF,OAAO,CAACC,GAAR,CAAYC,kBAA7C,GAAkEJ,gBAAlG;AACAN,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0CM,uBAA1C;AACA,MAAMI,aAAa,GAAG,IAAI7C,eAAJ,CAAoByC,uBAApB,CAAtB;;AAIA,SAASK,GAAT,GAAe;AACb,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CxD,QAAQ,EAAxD;AACA;;AACA,QAAMyD,KAAK,GAAGtC,gBAAgB,CAACyB,eAAD,CAA9B,CAHa,CAGoC;;AAEjD;;AACA,QAAMc,QAAQ,GAAGtC,WAAW,CAAC,MAAD,CAA5B,CANa,CAMyB;AAEtC;AAEA;;AACA,QAAMuC,YAAY,GAAGtC,eAAe,CAACkC,gBAAD,EAAmBF,aAAnB,CAApC;AACA,QAAMO,OAAO,GAAG1C,cAAc,CAACyC,YAAD,CAA9B,CAZa,CAcb;;AACA,QAAME,EAAE,GAAG5B,UAAU,CAAC0B,YAAD,EAAeD,QAAf,CAArB,CAfa,CAiBb;;AACA,QAAMI,gBAAgB,GAAGtC,UAAU,CAAC6B,aAAD,EAAgBO,OAAhB,CAAnC;AACAlB,EAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAkCmB,gBAAgB,GAAC3B,WAAW,CAAC2B,gBAAD,CAAZ,GAA+B,KAAjF,EAnBa,CAqBb;;AACA,QAAMC,kBAAkB,GAAGvC,UAAU,CAACoB,eAAD,EAAkBgB,OAAlB,CAArC;AACAlB,EAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAoCoB,kBAAkB,GAAC5B,WAAW,CAAC4B,kBAAD,CAAZ,GAAiC,KAAvF,EAvBa,CAyBb;;AACA,QAAMC,aAAa,GAAG1C,iBAAiB,CAAC+B,aAAD,CAAvC;AACAX,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAA+BqB,aAA/B,EA3Ba,CA6Bb;;AACA,QAAMC,OAAO,GAAG1C,iBAAiB,CAACyC,aAAD,EAAe,cAAf,EAA+B,SAA/B,CAAjC;AACAtB,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA0BsB,OAA1B,EA/Ba,CAiCb;;AACA,QAAMC,cAAc,GAAG5C,iBAAiB,CAACqC,YAAD,CAAxC;AACAjB,EAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAgCuB,cAAhC,EAnCa,CAqCb;;AACA,QAAMC,gBAAgB,GAAG1C,gBAAgB,CAACuC,aAAD,EAAgB,cAAhB,EAAgC,YAAhC,EAA8CX,aAA9C,EAA6D,CAA7D,CAAzC;AACAX,EAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAoCwB,gBAApC;AAEA,QAAMC,aAAa,GAAGtE,WAAW,CAAC,YAAY;AAC5C,UAAMuE,QAAQ,GAAG,MAAMC,SAAS,CAACC,OAAV,EAAvB;AACAf,IAAAA,mBAAmB,CAAC,IAAI/C,YAAJ,CAAiB4D,QAAjB,CAAD,CAAnB;AACD,GAHgC,EAG9B,CAACb,mBAAD,CAH8B,CAAjC;AAKAzD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIuE,SAAS,CAACE,cAAd,EAA8B;AAC5BJ,MAAAA,aAAa;AACd;AACF,GAJQ,EAIN,CAACA,aAAD,CAJM,CAAT;AAMA1B,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAwB8B,MAAM,CAACC,QAAP,CAAgBC,QAAxC;AAEA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoB7E,QAAQ,EAAlC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd2C,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA4B8B,MAAM,CAACC,QAAP,CAAgBC,QAA5C;AACAE,IAAAA,QAAQ,CAACJ,MAAM,CAACC,QAAP,CAAgBC,QAAjB,CAAR;AACD,GAHQ,EAGN,CAAEF,MAAM,CAACC,QAAP,CAAgBC,QAAlB,CAHM,CAAT;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,eAKE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEG,MAAAA,SAAS,EAAC;AAAZ,KAAb;AAAqC,IAAA,YAAY,EAAE,CAACF,KAAD,CAAnD;AAA4D,IAAA,IAAI,EAAC,YAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,IAAN;AAAW,IAAA,GAAG,EAAC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,OAAO,EAAE,MAAI;AAACC,MAAAA,QAAQ,CAAC,GAAD,CAAR;AAAc,KAAlC;AAAoC,IAAA,EAAE,EAAC,GAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CADF,eAIE,oBAAC,IAAD,CAAM,IAAN;AAAW,IAAA,GAAG,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,OAAO,EAAE,MAAI;AAACA,MAAAA,QAAQ,CAAC,QAAD,CAAR;AAAmB,KAAvC;AAAyC,IAAA,EAAE,EAAC,QAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,CAJF,eAOE,oBAAC,IAAD,CAAM,IAAN;AAAW,IAAA,GAAG,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,OAAO,EAAE,MAAI;AAACA,MAAAA,QAAQ,CAAC,YAAD,CAAR;AAAuB,KAA3C;AAA6C,IAAA,EAAE,EAAC,YAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CAPF,CAFF,eAcE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,GAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME,oBAAC,QAAD;AACE,IAAA,IAAI,EAAC,SADP;AAEE,IAAA,MAAM,EAAElB,YAAY,CAACoB,SAAb,EAFV;AAGE,IAAA,QAAQ,EAAE1B,aAHZ;AAIE,IAAA,OAAO,EAAEO,OAJX;AAKE,IAAA,aAAa,EAAEnB,aALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,eAaE,oBAAC,QAAD;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,MAAM,EAAEkB,YAAY,CAACoB,SAAb,EAFV;AAGE,IAAA,QAAQ,EAAE1B,aAHZ;AAIE,IAAA,OAAO,EAAEO,OAJX;AAKE,IAAA,aAAa,EAAEnB,aALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,eAoBE,oBAAC,QAAD;AACE,IAAA,IAAI,EAAC,KADP;AAEE,IAAA,MAAM,EAAEkB,YAAY,CAACoB,SAAb,EAFV;AAGE,IAAA,QAAQ,EAAE1B,aAHZ;AAIE,IAAA,OAAO,EAAEO,OAJX;AAKE,IAAA,aAAa,EAAEnB,aALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApBF,CADF,eA6BE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AACE,IAAA,OAAO,EAAEmB,OADX;AAEE,IAAA,gBAAgB,EAAEE,gBAFpB;AAGE,IAAA,eAAe,EAAElB,eAHnB;AAIE,IAAA,KAAK,EAAEa,KAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CA7BF,eAqCE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,YAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AACE,IAAA,eAAe,EAAEb,eADnB;AAEE,IAAA,gBAAgB,EAAEuB,gBAFpB;AAGE,IAAA,OAAO,EAAEF,OAHX;AAIE,IAAA,gBAAgB,EAAEH,gBAJpB;AAKE,IAAA,EAAE,EAAED,EALN;AAME,IAAA,cAAc,EAAEK,cANlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CArCF,CAdF,CALF,eAuEE;AAAK,IAAA,KAAK,EAAE;AAAEc,MAAAA,QAAQ,EAAE,OAAZ;AAAqBF,MAAAA,SAAS,EAAE,OAAhC;AAAyCG,MAAAA,KAAK,EAAE,CAAhD;AAAmDC,MAAAA,GAAG,EAAE,CAAxD;AAA2DC,MAAAA,OAAO,EAAE;AAApE,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG,oBAAC,OAAD;AACE,IAAA,OAAO,EAAEvB,OADX;AAEE,IAAA,aAAa,EAAEP,aAFjB;AAGE,IAAA,YAAY,EAAEM,YAHhB;AAIE,IAAA,eAAe,EAAEf,eAJnB;AAKE,IAAA,KAAK,EAAEa,KALT;AAME,IAAA,SAAS,EAAEa,SANb;AAOE,IAAA,aAAa,EAAEF,aAPjB;AAQE,IAAA,iBAAiB,EAAEgB,iBARrB;AASE,IAAA,aAAa,EAAE3C,aATjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,CAvEF,eAsFG;AAAK,IAAA,KAAK,EAAE;AAAEuC,MAAAA,QAAQ,EAAE,OAAZ;AAAqBF,MAAAA,SAAS,EAAE,MAAhC;AAAwCO,MAAAA,IAAI,EAAE,CAA9C;AAAiDC,MAAAA,MAAM,EAAE,EAAzD;AAA6DH,MAAAA,OAAO,EAAE;AAAtE,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,KAAK,EAAC,QAAX;AAAoB,IAAA,MAAM,EAAE,CAAC,CAAD,EAAI,CAAJ,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,IAAI,EAAE,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE1B,KAAb;AAAoB,IAAA,OAAO,EAAEG,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAKE,oBAAC,GAAD;AAAK,IAAA,IAAI,EAAE,CAAX;AAAc,IAAA,KAAK,EAAE;AAAEkB,MAAAA,SAAS,EAAE,QAAb;AAAuBS,MAAAA,OAAO,EAAE;AAAhC,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAU,IAAA,QAAQ,EAAE7B,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CALF,eAQE,oBAAC,GAAD;AAAK,IAAA,IAAI,EAAE,CAAX;AAAc,IAAA,KAAK,EAAE;AAAEoB,MAAAA,SAAS,EAAE,QAAb;AAAuBS,MAAAA,OAAO,EAAE;AAAhC,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAE,MAAM;AACbd,MAAAA,MAAM,CAACe,IAAP,CAAY,8CAAZ;AACD,KAHH;AAIE,IAAA,IAAI,EAAC,OAJP;AAKE,IAAA,KAAK,EAAC,OALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,WAAW,EAAE;AAAf,KAAb;AAAiC,IAAA,IAAI,EAAC,KAAtC;AAA4C,kBAAW,SAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPF,YADF,CARF,CADF,eAyBE,oBAAC,GAAD;AAAK,IAAA,KAAK,EAAC,QAAX;AAAoB,IAAA,MAAM,EAAE,CAAC,CAAD,EAAI,CAAJ,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,IAAI,EAAE,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGI;AACApC,EAAAA,aAAa,IAAIA,aAAa,CAACqC,UAA/B,IAA6CrC,aAAa,CAACqC,UAAd,CAAyBC,GAAtE,IAA6EtC,aAAa,CAACqC,UAAd,CAAyBC,GAAzB,CAA6BC,OAA7B,CAAqC,WAArC,KAAmD,CAAhI,IAAqI,CAAC1C,OAAO,CAACC,GAAR,CAAYC,kBAAlJ,IAAwKK,KAAK,GAAG,CAAhL,gBACE,oBAAC,MAAD;AAAQ,IAAA,aAAa,EAAEJ,aAAvB;AAAsC,IAAA,KAAK,EAAEI,KAA7C;AAAoD,IAAA,WAAW,EAAEb,eAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,GAGE,EAPN,CADF,CAzBF,CAtFH,CADF;AAiID;AAGD;;;;;AAGA,MAAM0B,SAAS,GAAG,IAAItD,SAAJ,CAAc;AAC9B;AACA6E,EAAAA,aAAa,EAAE,IAFe;AAET;AACrBC,EAAAA,eAAe,EAAE;AACfC,IAAAA,aAAa,EAAE;AACbC,MAAAA,OAAO,EAAE/E,qBADI;AACmB;AAChCgF,MAAAA,OAAO,EAAE;AACPC,QAAAA,QAAQ,EAAE5D;AADH;AAFI;AADA;AAHa,CAAd,CAAlB;;AAaA,MAAM8C,iBAAiB,GAAG,YAAY;AACpC,QAAMd,SAAS,CAAC6B,mBAAV,EAAN;AACAC,EAAAA,UAAU,CAAC,MAAM;AACf3B,IAAAA,MAAM,CAACC,QAAP,CAAgB2B,MAAhB;AACD,GAFS,EAEP,CAFO,CAAV;AAGD,CALD;;AAOA,eAAe/C,GAAf","sourcesContent":["import React, { useCallback, useEffect, useState } from \"react\";\nimport { BrowserRouter, Switch, Route, Link } from \"react-router-dom\";\nimport \"antd/dist/antd.css\";\nimport { MailOutlined } from \"@ant-design/icons\";\nimport { getDefaultProvider, InfuraProvider, JsonRpcProvider, Web3Provider } from \"@ethersproject/providers\";\nimport \"./App.css\";\nimport { Row, Col, Button, List, Tabs, Menu } from \"antd\";\nimport Web3Modal from \"web3modal\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport { useUserAddress } from \"eth-hooks\";\nimport { useExchangePrice, useGasPrice, useUserProvider, useContractLoader, useContractReader, useBalance, useEventListener } from \"./hooks\";\nimport { Header, Account, Faucet, Ramp, Contract, GasGauge, Address } from \"./components\";\nimport { Transactor } from \"./helpers\";\nimport { parseEther, formatEther } from \"@ethersproject/units\";\n//import Hints from \"./Hints\";\nimport { Hints, ExampleUI } from \"./views\"\n/*\n    Welcome to 🏗 scaffold-eth !\n\n    Code:\n    https://github.com/austintgriffith/scaffold-eth\n\n    Support:\n    https://t.me/joinchat/KByvmRe5wkR-8F_zz6AjpA\n    or DM @austingriffith on twitter or telegram\n\n    You should get your own Infura.io ID and put it in `constants.js`\n    (this is your connection to the main Ethereum network for ENS etc.)\n*/\nimport { INFURA_ID, ETHERSCAN_KEY } from \"./constants\";\nconst { TabPane } = Tabs;\n\n// 🔭 block explorer URL\nconst blockExplorer = \"https://etherscan.io/\" // for xdai: \"https://blockscout.com/poa/xdai/\"\n\n// 🛰 providers\nconsole.log(\"📡 Connecting to Mainnet Ethereum\");\nconst mainnetProvider = getDefaultProvider(\"mainnet\", { infura: INFURA_ID, etherscan: ETHERSCAN_KEY, quorum: 1 });\n// const mainnetProvider = new InfuraProvider(\"mainnet\",INFURA_ID);\n// const mainnetProvider = new JsonRpcProvider(\"https://mainnet.infura.io/v3/5ce0898319eb4f5c9d4c982c8f78392a\")\n// ( ⚠️ Getting \"failed to meet quorum\" errors? Check your INFURA_ID)\n\n// 🏠 Your local provider is usually pointed at your local blockchain\nconst localProviderUrl = \"http://localhost:8545\"; // for xdai: https://dai.poa.network\n// as you deploy to other networks you can set REACT_APP_PROVIDER=https://dai.poa.network in packages/react-app/.env\nconst localProviderUrlFromEnv = process.env.REACT_APP_PROVIDER ? process.env.REACT_APP_PROVIDER : localProviderUrl;\nconsole.log(\"🏠 Connecting to provider:\", localProviderUrlFromEnv);\nconst localProvider = new JsonRpcProvider(localProviderUrlFromEnv);\n\n\n\nfunction App() {\n  const [injectedProvider, setInjectedProvider] = useState();\n  /* 💵 this hook will get the price of ETH from 🦄 Uniswap: */\n  const price = useExchangePrice(mainnetProvider); //1 for xdai\n\n  /* 🔥 this hook will get the price of Gas from ⛽️ EtherGasStation */\n  const gasPrice = useGasPrice(\"fast\"); //1000000000 for xdai\n\n  // For more hooks, check out 🔗eth-hooks at: https://www.npmjs.com/package/eth-hooks\n\n  // Use your injected provider from 🦊 Metamask or if you don't have it then instantly generate a 🔥 burner wallet.\n  const userProvider = useUserProvider(injectedProvider, localProvider);\n  const address = useUserAddress(userProvider);\n\n  // The transactor wraps transactions and provides notificiations\n  const tx = Transactor(userProvider, gasPrice)\n\n  // 🏗 scaffold-eth is full of handy hooks like this one to get your balance:\n  const yourLocalBalance = useBalance(localProvider, address);\n  console.log(\"💵 yourLocalBalance\",yourLocalBalance?formatEther(yourLocalBalance):\"...\")\n\n  // just plug in different 🛰 providers to get your balance on different chains:\n  const yourMainnetBalance = useBalance(mainnetProvider, address);\n  console.log(\"💵 yourMainnetBalance\",yourMainnetBalance?formatEther(yourMainnetBalance):\"...\")\n\n  // Load in your local 📝 contract and read a value from it:\n  const readContracts = useContractLoader(localProvider)\n  console.log(\"📝 readContracts\",readContracts)\n\n  // keep track of a variable from the contract in the local React state:\n  const purpose = useContractReader(readContracts,\"YourContract\", \"purpose\")\n  console.log(\"🤗 purpose:\",purpose)\n\n  // If you want to make 🔐 write transactions to your contracts, use the userProvider:\n  const writeContracts = useContractLoader(userProvider)\n  console.log(\"🔐 writeContracts\",writeContracts)\n\n  //📟 Listen for broadcast events\n  const setPurposeEvents = useEventListener(readContracts, \"YourContract\", \"SetPurpose\", localProvider, 1);\n  console.log(\"📟 SetPurpose events:\",setPurposeEvents)\n\n  const loadWeb3Modal = useCallback(async () => {\n    const provider = await web3Modal.connect();\n    setInjectedProvider(new Web3Provider(provider));\n  }, [setInjectedProvider]);\n\n  useEffect(() => {\n    if (web3Modal.cachedProvider) {\n      loadWeb3Modal();\n    }\n  }, [loadWeb3Modal]);\n\n  console.log(\"Location:\",window.location.pathname)\n\n  const [route, setRoute] = useState();\n  useEffect(() => {\n    console.log(\"SETTING ROUTE\",window.location.pathname)\n    setRoute(window.location.pathname)\n  }, [ window.location.pathname ]);\n\n  return (\n    <div className=\"App\">\n\n      {/* ✏️ Edit the header and change the title to your project name */}\n      <Header />\n\n      <BrowserRouter>\n\n        <Menu style={{ textAlign:\"center\" }} selectedKeys={[route]} mode=\"horizontal\">\n          <Menu.Item key=\"/\">\n            <Link onClick={()=>{setRoute(\"/\")}} to=\"/\">ServiceChain</Link>\n          </Menu.Item>\n          <Menu.Item key=\"/hints\">\n            <Link onClick={()=>{setRoute(\"/hints\")}} to=\"/hints\">Hints</Link>\n          </Menu.Item>\n          <Menu.Item key=\"/exampleui\">\n            <Link onClick={()=>{setRoute(\"/exampleui\")}} to=\"/exampleui\">ExampleUI</Link>\n          </Menu.Item>\n        </Menu>\n\n        <Switch>\n          <Route exact path=\"/\">\n            {/*\n                🎛 this scaffolding is full of commonly used components\n                this <Contract/> component will automatically parse your ABI\n                and give you a form to interact with it locally\n            */}\n            <Contract\n              name=\"Tipping\"\n              signer={userProvider.getSigner()}\n              provider={localProvider}\n              address={address}\n              blockExplorer={blockExplorer}\n            />\n            <Contract\n              name=\"Rating\"\n              signer={userProvider.getSigner()}\n              provider={localProvider}\n              address={address}\n              blockExplorer={blockExplorer}\n            />\n            <Contract\n              name=\"Log\"\n              signer={userProvider.getSigner()}\n              provider={localProvider}\n              address={address}\n              blockExplorer={blockExplorer}\n            />\n          </Route>\n          <Route path=\"/hints\">\n            <Hints\n              address={address}\n              yourLocalBalance={yourLocalBalance}\n              mainnetProvider={mainnetProvider}\n              price={price}\n            />\n          </Route>\n          <Route path=\"/exampleui\">\n            <ExampleUI\n              mainnetProvider={mainnetProvider}\n              setPurposeEvents={setPurposeEvents}\n              purpose={purpose}\n              yourLocalBalance={yourLocalBalance}\n              tx={tx}\n              writeContracts={writeContracts}\n            />\n          </Route>\n        </Switch>\n      </BrowserRouter>\n\n\n      {/* 👨‍💼 Your account is in the top right with a wallet at connect options */}\n      <div style={{ position: \"fixed\", textAlign: \"right\", right: 0, top: 0, padding: 10 }}>\n         <Account\n           address={address}\n           localProvider={localProvider}\n           userProvider={userProvider}\n           mainnetProvider={mainnetProvider}\n           price={price}\n           web3Modal={web3Modal}\n           loadWeb3Modal={loadWeb3Modal}\n           logoutOfWeb3Modal={logoutOfWeb3Modal}\n           blockExplorer={blockExplorer}\n         />\n      </div>\n\n      {/* 🗺 Extra UI like gas price, eth price, faucet, and support: */}\n       <div style={{ position: \"fixed\", textAlign: \"left\", left: 0, bottom: 20, padding: 10 }}>\n         <Row align=\"middle\" gutter={[4, 4]}>\n           <Col span={8}>\n             <Ramp price={price} address={address} />\n           </Col>\n\n           <Col span={8} style={{ textAlign: \"center\", opacity: 0.8 }}>\n             <GasGauge gasPrice={gasPrice} />\n           </Col>\n           <Col span={8} style={{ textAlign: \"center\", opacity: 1 }}>\n             <Button\n               onClick={() => {\n                 window.open(\"https://t.me/joinchat/KByvmRe5wkR-8F_zz6AjpA\");\n               }}\n               size=\"large\"\n               shape=\"round\"\n             >\n               <span style={{ marginRight: 8 }} role=\"img\" aria-label=\"support\">\n                 💬\n               </span>\n               Support\n             </Button>\n           </Col>\n         </Row>\n\n         <Row align=\"middle\" gutter={[4, 4]}>\n           <Col span={24}>\n             {\n\n               /*  if the local provider has a signer, let's show the faucet:  */\n               localProvider && localProvider.connection && localProvider.connection.url && localProvider.connection.url.indexOf(\"localhost\")>=0 && !process.env.REACT_APP_PROVIDER && price > 1 ? (\n                 <Faucet localProvider={localProvider} price={price} ensProvider={mainnetProvider}/>\n               ) : (\n                 \"\"\n               )\n             }\n           </Col>\n         </Row>\n       </div>\n\n    </div>\n  );\n}\n\n\n/*\n  Web3 modal helps us \"connect\" external wallets:\n*/\nconst web3Modal = new Web3Modal({\n  // network: \"mainnet\", // optional\n  cacheProvider: true, // optional\n  providerOptions: {\n    walletconnect: {\n      package: WalletConnectProvider, // required\n      options: {\n        infuraId: INFURA_ID,\n      },\n    },\n  },\n});\n\nconst logoutOfWeb3Modal = async () => {\n  await web3Modal.clearCachedProvider();\n  setTimeout(() => {\n    window.location.reload();\n  }, 1);\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}